#include "SurgeFX.hpp"
#include "Surge.hpp"
#include "SurgeRackGUI.hpp"

struct SurgeEQWidget : SurgeModuleWidgetCommon {
    typedef SurgeFX<fxt_eq> M;
    SurgeEQWidget(M *module);

    void moduleBackground(NVGcontext *vg) {

        nvgBeginPath(vg);
        nvgFillColor(vg, nvgRGBA(255,0,0,255));
        nvgFontFaceId(vg, fontId(vg));
        nvgFontSize(vg, 18);
        nvgSave(vg);
        nvgTranslate(vg, SCREW_WIDTH * 9, RACK_HEIGHT / 2.4 );
        nvgTextAlign(vg, NVG_ALIGN_CENTER | NVG_ALIGN_TOP);
        nvgRotate(vg, -M_PI / 4);
        nvgText(vg, 0, 0, "SurgeEQ", NULL );
        nvgText(vg, 0, 22, "Under Construction", NULL);
        nvgRestore(vg);

        
        drawLeftRightInputOutputBackground(vg, box);

        if( module )
        {
            M *mc = dynamic_cast<M *>(module);
            if( mc )
            {
                rack::INFO( "[SurgeRack][FX Blank %s]", mc->getName().c_str() );
                for( int i=0; i<n_fx_params; ++i )
                {
                    rack::INFO( "  %d '%s'/'%s' = '%s'", i,
                          mc->groupCache[i].getValue().c_str(),
                          mc->labelCache[i].getValue().c_str(),
                          mc->paramDisplayCache[i].getValue().c_str() );
                }
            }
        }
    }
};

SurgeEQWidget::SurgeEQWidget(SurgeEQWidget::M *module)
    : SurgeModuleWidgetCommon()
{
    setModule(module);

    box.size = rack::Vec(SCREW_WIDTH * 20, RACK_HEIGHT);
    SurgeRackBG *bg = new SurgeRackBG(rack::Vec(0, 0), box.size, "EQ");
    bg->moduleSpecificDraw = [this](NVGcontext *vg) {
        this->moduleBackground(vg);
    };
    addChild(bg);

    addInput(rack::createInput<rack::PJ301MPort>(ioPortLocation(true, 0, box),
                                                 module, M::INPUT_L_OR_MONO));
    addInput(rack::createInput<rack::PJ301MPort>(ioPortLocation(true, 1, box),
                                                 module, M::INPUT_R));
    addParam(rack::createParam<SurgeSmallKnob>(ioPortLocation(true, 2, box), module,
                                               M::INPUT_GAIN));

    addOutput(rack::createOutput<rack::PJ301MPort>(
                  ioPortLocation(false, 0, box), module, M::OUTPUT_L_OR_MONO));
    addOutput(rack::createOutput<rack::PJ301MPort>(ioPortLocation(false, 1, box),
                                                   module, M::OUTPUT_R));
    addParam(rack::createParam<SurgeSmallKnob>(ioPortLocation(false, 2, box), module,
                                               M::OUTPUT_GAIN));

}

auto meq = addFX(
    rack::createModel<SurgeEQWidget::M, SurgeEQWidget>("SurgeEQ"), fxt_eq );
